/*
 * generated by Xtext 2.23.0
 */
package org.tvtower.ui.labeling;

import com.google.inject.Inject;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;
import org.tvtower.bmx.BmxFunction;
import org.tvtower.bmx.BmxMethod;
import org.tvtower.bmx.BmxType;
import org.tvtower.bmx.ConstantDefinition;
import org.tvtower.bmx.ExternBlock;
import org.tvtower.bmx.FieldDefinition;
import org.tvtower.bmx.FunctionDeclaration;
import org.tvtower.bmx.GlobalDefinion;
import org.tvtower.bmx.LocalDefinition;
import org.tvtower.bmx.TypeDef;

/**
 * Provides labels for EObjects.
 * 
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#label-provider
 */
public class BmxLabelProvider extends DefaultEObjectLabelProvider {

	@Inject
	public BmxLabelProvider(AdapterFactoryLabelProvider delegate) {
		super(delegate);
	}

	// Labels and icons can be computed like this:
	
//	String text(Greeting ele) {
//		return "A greeting to " + ele.getName();
//	}
//

	String text(ExternBlock b) {
		return "extern";
	}

	String text(GlobalDefinion g) {
		return (String)doGetText(g.getType());
	}

	String text(ConstantDefinition g) {
		return (String)doGetText(g.getType());
	}

	String image(BmxType type) {
		return "type.gif";
	}

	String image(ConstantDefinition constant) {
		return "const.gif";
	}

	String image(FieldDefinition field) {
		return "field.gif";
	}

	String image(TypeDef def) {
		return (String)doGetImage(def.eContainer());
	}

	String image(GlobalDefinion global) {
		return "global.gif";
	}

	String image(LocalDefinition local) {
		return "local.png";
	}

	String image(BmxMethod method) {
		return "method.gif";
	}

	String image(BmxFunction fct) {
		return "function.gif";
	}

	String image(FunctionDeclaration fct) {
		return "function.gif";
	}

	//hack for artificial nodes
	String image(String key) {
		if("members".equals(key)) {
			return "members.png";
		}else {
			return null;
		}
	}
}
